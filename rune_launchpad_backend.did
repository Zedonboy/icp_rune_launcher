type BitcoinNetwork = variant { mainnet; regtest; testnet };
type GetUtxosResponse = record {
  next_page : opt blob;
  tip_height : nat32;
  tip_block_hash : blob;
  utxos : vec Utxo;
};
type LaunchPadError = variant {};
type Outpoint = record { txid : blob; vout : nat32 };
type Result = variant { Ok : text; Err : LaunchPadError };
type RuneInfo = record { decimals : nat; amount : nat; symbol : text };
type Utxo = record { height : nat32; value : nat64; outpoint : Outpoint };
service : (opt BitcoinNetwork) -> {
  etch_rune : (RuneInfo) -> (Result);
  get_balance : (text) -> (nat64);
  get_current_fee_percentiles : () -> (vec nat64);
  get_p2pkh_address : () -> (text);
  get_utxos : (text) -> (GetUtxosResponse);
  greet : (text) -> (text) query;
  withdraw_btc : (text, nat64) -> (Result);
}
